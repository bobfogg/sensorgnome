#!/usr/bin/python
# -*- Mode:Python; indent-tabs-mode:nil; tab-width:4 -*-

# If /data/sg_files/network.txt exists, grab an essid and passphrase
# from it and set up the SG as a WiFi client. unless it contains
# a line like WiFiClient = no
# If /data/sg_files/no_network.txt exists, set up the SGPi as a
# WiFi hotspot.
# If neither file exists, do nothing.

import io
import re
import os
import errno

def force_symlink(file1, file2):
    try:
        os.symlink(file1, file2)
    except OSError, e:
        if e.errno == errno.EEXIST:
            os.remove(file2)
            os.symlink(file1, file2)


WIFI_CONF_FILE = "/data/sg_files/network.txt"
CLIENT_INTERFACES_FILE = "/etc/network/wifi_client"
HOTSPOT_INTERFACES_FILE = "/etc/network/wifi_hotspot"
INTERFACES_WIFI_LINK = "/etc/network/interfaces.d/wifi"

wificlient = False
essid=""
psk=""

if os.path.exists(WIFI_CONF_FILE):
    wificlient = True
    with open(WIFI_CONF_FILE, "r") as fin:
        for line in fin:
            line = line.rstrip().lstrip() # remove leading and trailing whitespace
            if len(line) == 0 or line[0] == '#':
                continue
            m = re.match("(?i)^wifi\s*client\s*=\s*(.*)$", line)
            if m:
                wificlient = m.groups()[0].lower() != "no"
                continue
            if not essid:
                essid = line
                continue
            if not psk:
                psk = line

        if wificlient and essid and psk:
            intf = open(CLIENT_INTERFACES_FILE, "r")
            conf = intf.read()
            intf.close()
            conf = re.sub('\n[ \t]*wpa-e?ssid[ \t]+[^\n]*\n',
                          '\nwpa-essid "%s"\n' % essid,
                          conf)
            conf = re.sub('\n[ \t]*wpa-(psk|passphrase)[ \t]+[^\n]*\n',
                          '\nwpa-passphrase "%s"\n' % psk,
                          conf)
            intf = open(CLIENT_INTERFACES_FILE, "w")
            intf.write(conf)
            intf.close()
            force_symlink(CLIENT_INTERFACES_FILE, INTERFACES_WIFI_LINK)
            os.system('ifdown wlan0; ifconfig wlan0 down; ifconfig wlan0 up; ifup wlan0')
        else:
            force_symlink(HOTSPOT_INTERFACES_FILE, INTERFACES_WIFI_LINK)
